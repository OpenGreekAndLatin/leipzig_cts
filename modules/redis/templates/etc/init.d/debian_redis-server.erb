#!/bin/sh
### BEGIN INIT INFO
# Provides:             redis-server_<%= @redis_name %>
# Required-Start:       $syslog $remote_fs
# Required-Stop:        $syslog $remote_fs
# Should-Start:         $local_fs
# Should-Stop:          $local_fs
# Default-Start:        2 3 4 5 
# Default-Stop:         0 1 6 
# Short-Description:    this script starts and stops the redis-server daemon
# Description:          this script starts and stops the redis-server daemon
### END INIT INFO

# Source function library.
. /lib/lsb/init-functions

REDIS_EXEC="<%= @redis_install_dir %>/redis-server"
REDIS_NAME="redis-server_<%= @redis_name %>"
REDIS_PID="<%= @redis_pid_dir %>/redis_<%= @redis_name %>.pid"
REDIS_LOCKFILE="/var/lock/redis_<%= @redis_name %>"
REDIS_CONF_FILE="/etc/redis_<%= @redis_name %>.conf"
RUNTIME_CONF_FILE="<%= @redis_run_dir %>/redis_<%= @redis_name %>.conf"

[ -x "$REDIS_EXEC" ] || exit 5

start() {
    local retval

    [ -f "$REDIS_CONF_FILE" ] || exit 6
    [ -d <%= @redis_run_dir %> ] ||mkdir -p <%= @redis_run_dir %>

    log_daemon_msg "Starting $REDIS_NAME"
    cp -u $REDIS_CONF_FILE $RUNTIME_CONF_FILE
    start-stop-daemon --start --quiet --pidfile "$REDIS_PID" --retry 5 --exec "$REDIS_EXEC" --oknodo -- "$RUNTIME_CONF_FILE"

    retval=$?
    log_end_msg $retval
    [ $retval -eq 0 ] && touch "$REDIS_LOCKFILE"

    return $retval
}

stop() {
    local retval

    log_daemon_msg "Stopping $REDIS_NAME"
    start-stop-daemon --stop --quiet --signal QUIT --pidfile "$REDIS_PID" --retry 5 --oknodo --exec "$REDIS_EXEC"

    retval=$?
    log_end_msg $retval
    [ $retval -eq 0 ] && rm -f "$REDIS_LOCKFILE"

    return $retval
}

restart() {
    stop
    sleep 1
    start
}

reload() {
    local retval

    log_daemon_msg "Stopping $REDIS_NAME"
    killproc -p"$pidfile" $redis -HUP
    start-stop-daemon --stop --quiet --signal HUP --pidfile "$REDIS_PID" --oknodo --exec "$REDIS_EXEC"

    retval=$?
    log_end_msg $retval
    return $retval
}

status() {
    local retval
    status_of_proc -p "$REDIS_PID" "$REDIS_EXEC" "$REDIS_NAME"
    retval=$?
    return $retval
}

status_q() {
    status >/dev/null 2>&1
}

case "$1" in
    start)
        status_q && exit 0
        start
        ;;
    stop)
        status_q || exit 0
        stop
        ;;
    restart|configtest|force-reload)
        restart
        ;;
    reload)
        status_q || exit 7
        reload
        ;;
    status)
        status
        ;;
    condrestart|try-restart)
        status_q || exit 0
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload}"
        exit 2
esac
