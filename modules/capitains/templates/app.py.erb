# -*- coding: utf-8 -*-

from flask import Flask, request
from flask_nemo import Nemo
from flask_nemo.chunker import level_grouper
from capitains_nautilus.flask_ext import FlaskNautilus, WerkzeugCacheWrapper
from werkzeug.contrib.cache import RedisCache
from flask_cache import Cache
from pkg_resources import resource_filename
from cts_leipzig_ui import CTSLeipzigUI
import os
     
d = "<%= @data_root %>"
app = Flask("Nautilus")
nautilus_cache = RedisCache("<%= scope.lookupvar('capitains::redis_host') %>", port=6379, default_timeout=0)
nautilus = FlaskNautilus(
    app=app,
    prefix="/api/cts",
    name="nautilus",
    resources=[os.path.join(d,o) for o in os.listdir(d) if os.path.isdir(os.path.join(d,o))],
    parser_cache=WerkzeugCacheWrapper(nautilus_cache),
    http_cache=Cache(config={'CACHE_TYPE': "simple"})
)

# We set up Nemo
nemo = Nemo(
    app=app,
    name="nemo",
    base_url="",
    api_url="/api/cts",
    retriever=nautilus.retriever,
    chunker={
        "default": level_grouper
    },
    plugins=[CTSLeipzigUI()]
    transform={
        "default": resource_filename("perseus_nemo_ui","data/assets/static/xslt/epidocShort.xsl")
    },
)

app.debug = True
if __name__ == "__main__":
    app.run(debug=True, host='0.0.0.0')
